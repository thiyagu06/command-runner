name: release-build

on:
  release:
    types: [ created ]
jobs:
  build-jar:
    name: "build java executable"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: adopt
          cache: 'gradle'
      - name: 'Get Version Number'
        run: |
          echo "VERSION=$(./gradlew properties -q | grep "runnerVersion:" | awk '{print $2}')" >> $GITHUB_ENV
      - name: 'build JAR'
        run: ./gradlew clean build
      - name: 'upload release assert'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: build/quarkus-app/quarkus-run.jar
          asset_name: command-runner-${{env.VERSION}}-all.jar
          asset_content_type: application/octet-stream
  build:
    name: 'Build with GraalVM on ${{ matrix.os }}'
    strategy:
      fail-fast: true
      matrix:
        os: [ macos-latest, ubuntu-latest ]
        include:
          - os: 'ubuntu-latest'
            label: 'linux'
          - os: 'macos-latest'
            label: 'mac'
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Install graalvm
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm-version: '21.3.0.java17'
      - name: cache gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: 'Get Version Number'
        run: echo "VERSION=$(./gradlew properties -q | grep "runnerVersion:" | awk '{print $2}')" >> $GITHUB_ENV
      - name: Install native-image
        run: gu install native-image
      - name: Build native executable
        run: ./gradlew build -Dquarkus.package.type=native
      - name: Upload native executable
        id: upload-native-executable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: build/command-runner-${{ env.VERSION }}-runner
          asset_name: command-runner-${{ env.VERSION }}-${{matrix.label}}
          asset_content_type: application/octet-stream
